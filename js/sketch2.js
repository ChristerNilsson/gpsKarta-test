// Generated by CoffeeScript 2.5.1
var SCALE, VERSION, cx, cy, data, draw, f, img, index, initSpeaker, mapName, messages, preload, released, say, setup, speaker, start, startX, startY, state, timer, touchEnded, touchMoved, touchStarted;

VERSION = 101;

released = true;

mapName = ""; // t ex skarpnÃ¤ck

start = new Date();

state = 0; // 0=uninitialized 1=normal 2=info

data = null;

img = null;

startX = 0;

startY = 0;

messages = [];

index = 0;

speaker = null;

timer = null;

[cx, cy] = [
  0,
  0 // center (image coordinates)
];

SCALE = 1;

preload = function() {
  mapName = "2023-SommarS";
  return loadJSON(`data/${mapName}.json`, function(json) {
    var control, key, ref;
    data = json;
    ref = data.controls;
    for (key in ref) {
      control = ref[key];
      control.push("");
      control.push(0);
      control.push(0);
    }
    return img = loadImage("data/" + data.map);
  });
};

setup = function() {
  var canvas;
  canvas = createCanvas(innerWidth - 0.0, innerHeight); //-0.5
  canvas.position(0, 0); // hides text field used for clipboard copy.
  SCALE = data.scale;
  [cx, cy] = [img.width / 2, img.height / 2];
  return initSpeaker();
};

draw = function() {
  var i, j, len, ref, results, x, y;
  background(0, 255, 0);
  if (state === 0) {
    textSize(100);
    textAlign(CENTER, CENTER);
    x = width / 2;
    y = height / 2;
    text(mapName, x, y - 100);
    text('Version: ' + VERSION, x, y);
    text("Click to continue!", x, y + 200);
    return;
  }
  if (state === 1) {
    start = new Date();
    push();
    translate(width / 2, height / 2);
    scale(SCALE);
    image(img, round(-cx), round(-cy));
    pop();
    textSize(20);
    messages.push(round(frameRate()));
    ref = range(messages.length);
    //if messages.length > 50 then messages.shift()
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      if (i < messages.length - 50) {
        continue;
      }
      results.push(text(messages[i], 50, 20 + 20 * (i % 50)));
    }
    return results;
  }
};

touchStarted = function(event) {
  event.preventDefault();
  if (!released) {
    return;
  }
  //speed = 1
  released = false;
  startX = mouseX;
  startY = mouseY;
  return false;
};

touchMoved = function(event) {
  event.preventDefault();
  if (state === 1) {
    cx += (startX - mouseX) / SCALE;
    cy += (startY - mouseY) / SCALE;
    startX = mouseX;
    startY = mouseY;
  }
  return false;
};

touchEnded = function(event) {
  event.preventDefault();
  //say index
  //index++
  if (released) {
    return;
  }
  //initSpeaker() 
  released = true;
  if (state === 0 || state === 2) {
    state = 1;
    return false;
  }
  return false;
};

initSpeaker = function() {
  speaker = new SpeechSynthesisUtterance();
  speaker.voiceURI = "native";
  speaker.volume = 1;
  speaker.rate = 1.0;
  speaker.pitch = 0;
  speaker.text = '';
  speaker.lang = 'en-GB';
  //say "initspeaker"
  return f();
};

f = () => {
  say(index);
  console.log(index);
  index += 1;
  return setTimeout(f, 1000);
};

//setTimer = (ms) -> setTimeout f,ms
say = function(m) {
  if (speaker === null) {
    return;
  }
  speechSynthesis.cancel();
  speaker.text = m;
  return speechSynthesis.speak(speaker);
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\gpsKarta-test\coffee\sketch2.coffee